
==> Audit <==
|------------|-------------------------|----------|----------|---------|---------------------|---------------------|
|  Command   |          Args           | Profile  |   User   | Version |     Start Time      |      End Time       |
|------------|-------------------------|----------|----------|---------|---------------------|---------------------|
| start      |                         | minikube | sagars01 | v1.33.1 | 07 Jul 24 20:50 IST | 07 Jul 24 20:55 IST |
| docker-env |                         | minikube | sagars01 | v1.33.1 | 07 Jul 24 21:57 IST | 07 Jul 24 21:57 IST |
| dashboard  |                         | minikube | sagars01 | v1.33.1 | 08 Jul 24 11:35 IST |                     |
| docker-env |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 13:38 IST | 13 Jul 24 13:38 IST |
| start      |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 13:41 IST | 13 Jul 24 13:42 IST |
| start      |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:00 IST | 13 Jul 24 14:01 IST |
| dashboard  |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:01 IST |                     |
| docker-env |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:04 IST | 13 Jul 24 14:04 IST |
| start      |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:04 IST | 13 Jul 24 14:04 IST |
| dashboard  |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:05 IST |                     |
| docker-env |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:06 IST | 13 Jul 24 14:06 IST |
| start      |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:08 IST | 13 Jul 24 14:09 IST |
| dashboard  |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:09 IST |                     |
| docker-env | minikube docker-env     | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:11 IST | 13 Jul 24 14:11 IST |
| docker-env | minikube docker-env     | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:11 IST | 13 Jul 24 14:11 IST |
| docker-env |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:11 IST | 13 Jul 24 14:11 IST |
| start      |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:12 IST | 13 Jul 24 14:13 IST |
| addons     | enable metrics-server   | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:13 IST | 13 Jul 24 14:13 IST |
| dashboard  |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:13 IST |                     |
| docker-env |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:17 IST | 13 Jul 24 14:17 IST |
| start      |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:24 IST | 13 Jul 24 14:25 IST |
| docker-env | minikube docker-env     | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:25 IST | 13 Jul 24 14:25 IST |
| docker-env |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:38 IST | 13 Jul 24 14:38 IST |
| ssh        |                         | minikube | sagars01 | v1.33.1 | 13 Jul 24 14:38 IST | 14 Jul 24 10:25 IST |
| docker-env |                         | minikube | sagars01 | v1.33.1 | 14 Jul 24 10:26 IST | 14 Jul 24 10:26 IST |
| ssh        |                         | minikube | sagars01 | v1.33.1 | 14 Jul 24 10:28 IST | 14 Jul 24 10:30 IST |
| ssh        |                         | minikube | sagars01 | v1.33.1 | 14 Jul 24 10:33 IST |                     |
| ssh        |                         | minikube | sagars01 | v1.33.1 | 14 Jul 24 11:34 IST | 14 Jul 24 11:37 IST |
| ssh        |                         | minikube | sagars01 | v1.33.1 | 14 Jul 24 11:39 IST | 14 Jul 24 11:39 IST |
| docker-env |                         | minikube | sagars01 | v1.33.1 | 14 Jul 24 11:40 IST | 14 Jul 24 11:40 IST |
| dashboard  |                         | minikube | sagars01 | v1.33.1 | 14 Jul 24 11:49 IST |                     |
| image      | load go-health-api:v1   | minikube | sagars01 | v1.33.1 | 14 Jul 24 11:58 IST | 14 Jul 24 11:58 IST |
| ip         |                         | minikube | sagars01 | v1.33.1 | 14 Jul 24 12:00 IST | 14 Jul 24 12:00 IST |
| service    | go-health-api           | minikube | sagars01 | v1.33.1 | 14 Jul 24 12:03 IST | 14 Jul 24 12:04 IST |
| ssh        |                         | minikube | sagars01 | v1.33.1 | 14 Jul 24 12:05 IST |                     |
| service    | list                    | minikube | sagars01 | v1.33.1 | 14 Jul 24 12:06 IST | 14 Jul 24 12:06 IST |
| image      | load python-api:v1      | minikube | sagars01 | v1.33.1 | 14 Jul 24 12:26 IST | 14 Jul 24 12:27 IST |
| image      | load nextjs-frontend:v1 | minikube | sagars01 | v1.33.1 | 14 Jul 24 12:27 IST | 14 Jul 24 12:27 IST |
| docker-env |                         | minikube | sagars01 | v1.33.1 | 14 Jul 24 12:28 IST |                     |
| stop       |                         | minikube | sagars01 | v1.33.1 | 14 Jul 24 12:30 IST |                     |
|------------|-------------------------|----------|----------|---------|---------------------|---------------------|


==> Last Start <==
Log file created at: 2024/07/13 14:24:40
Running on machine: Sagarmoys-MacBook-Air
Binary: Built with gc go1.22.3 for darwin/arm64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0713 14:24:40.120662   97846 out.go:291] Setting OutFile to fd 1 ...
I0713 14:24:40.121397   97846 out.go:343] isatty.IsTerminal(1) = true
I0713 14:24:40.121401   97846 out.go:304] Setting ErrFile to fd 2...
I0713 14:24:40.121405   97846 out.go:343] isatty.IsTerminal(2) = true
I0713 14:24:40.121851   97846 root.go:338] Updating PATH: /Users/sagars01/.minikube/bin
I0713 14:24:40.122402   97846 oci.go:576] shell is pointing to dockerd inside minikube. will unset to use host
W0713 14:24:40.123083   97846 root.go:314] Error reading config file at /Users/sagars01/.minikube/config/config.json: open /Users/sagars01/.minikube/config/config.json: no such file or directory
I0713 14:24:40.124701   97846 out.go:298] Setting JSON to false
I0713 14:24:40.159276   97846 start.go:129] hostinfo: {"hostname":"Sagarmoys-MacBook-Air.local","uptime":3475337,"bootTime":1717385543,"procs":385,"os":"darwin","platform":"darwin","platformFamily":"Standalone Workstation","platformVersion":"14.5","kernelVersion":"23.5.0","kernelArch":"arm64","virtualizationSystem":"","virtualizationRole":"","hostId":"f87446b0-8bcc-5f62-8c6c-39b5edd06234"}
W0713 14:24:40.159379   97846 start.go:137] gopshost.Virtualization returned error: not implemented yet
I0713 14:24:40.167254   97846 out.go:177] 😄  minikube v1.33.1 on Darwin 14.5 (arm64)
I0713 14:24:40.178852   97846 out.go:177]     ▪ MINIKUBE_ACTIVE_DOCKERD=minikube
I0713 14:24:40.179570   97846 notify.go:220] Checking for updates...
I0713 14:24:40.184725   97846 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.30.0
I0713 14:24:40.185593   97846 driver.go:392] Setting default libvirt URI to qemu:///system
I0713 14:24:40.286937   97846 docker.go:122] docker version: linux-24.0.7:Docker Desktop 4.26.1 (131620)
I0713 14:24:40.287429   97846 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0713 14:24:40.655905   97846 info.go:266] docker info: {ID:81fbcc38-3b85-4c67-80ce-eabf5668bac0 Containers:1 ContainersRunning:1 ContainersPaused:0 ContainersStopped:0 Images:1 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:70 OomKillDisable:false NGoroutines:89 SystemTime:2024-07-13 08:54:40.633433842 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:10 KernelVersion:6.5.11-linuxkit OperatingSystem:Docker Desktop OSType:linux Architecture:aarch64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:4119306240 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:24.0.7 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:d8f198a4ed8892c764191ef7b3b06d8a2eeb5c7f Expected:d8f198a4ed8892c764191ef7b3b06d8a2eeb5c7f} RuncCommit:{ID:v1.1.10-0-g18a0cb0 Expected:v1.1.10-0-g18a0cb0} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined name=cgroupns] ProductLicense: Warnings:[WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/Users/sagars01/.docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-buildx] ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.12.0-desktop.2] map[Name:compose Path:/Users/sagars01/.docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-compose] ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.23.3-desktop.2] map[Name:dev Path:/Users/sagars01/.docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-dev] ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:/Users/sagars01/.docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-extension] ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.21] map[Name:feedback Path:/Users/sagars01/.docker/cli-plugins/docker-feedback SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-feedback] ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:0.1] map[Name:init Path:/Users/sagars01/.docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-init] ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.10] map[Name:sbom Path:/Users/sagars01/.docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-sbom] ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:/Users/sagars01/.docker/cli-plugins/docker-scan SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-scan] ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:/Users/sagars01/.docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-scout] ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.2.0]] Warnings:<nil>}}
I0713 14:24:40.659101   97846 out.go:177] ✨  Using the docker driver based on existing profile
I0713 14:24:40.667336   97846 start.go:297] selected driver: docker
I0713 14:24:40.667340   97846 start.go:901] validating driver "docker" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true metrics-server:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0713 14:24:40.667554   97846 start.go:912] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0713 14:24:40.667704   97846 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0713 14:24:40.799307   97846 info.go:266] docker info: {ID:81fbcc38-3b85-4c67-80ce-eabf5668bac0 Containers:1 ContainersRunning:1 ContainersPaused:0 ContainersStopped:0 Images:1 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:70 OomKillDisable:false NGoroutines:89 SystemTime:2024-07-13 08:54:40.784948133 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:10 KernelVersion:6.5.11-linuxkit OperatingSystem:Docker Desktop OSType:linux Architecture:aarch64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:4119306240 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:24.0.7 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:d8f198a4ed8892c764191ef7b3b06d8a2eeb5c7f Expected:d8f198a4ed8892c764191ef7b3b06d8a2eeb5c7f} RuncCommit:{ID:v1.1.10-0-g18a0cb0 Expected:v1.1.10-0-g18a0cb0} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined name=cgroupns] ProductLicense: Warnings:[WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/Users/sagars01/.docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-buildx] ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.12.0-desktop.2] map[Name:compose Path:/Users/sagars01/.docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-compose] ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.23.3-desktop.2] map[Name:dev Path:/Users/sagars01/.docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-dev] ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:/Users/sagars01/.docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-extension] ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.21] map[Name:feedback Path:/Users/sagars01/.docker/cli-plugins/docker-feedback SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-feedback] ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:0.1] map[Name:init Path:/Users/sagars01/.docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-init] ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.10] map[Name:sbom Path:/Users/sagars01/.docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-sbom] ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:/Users/sagars01/.docker/cli-plugins/docker-scan SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-scan] ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:/Users/sagars01/.docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShadowedPaths:[/usr/local/lib/docker/cli-plugins/docker-scout] ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.2.0]] Warnings:<nil>}}
I0713 14:24:40.800391   97846 cni.go:84] Creating CNI manager for ""
I0713 14:24:40.800575   97846 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0713 14:24:40.800777   97846 start.go:340] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true metrics-server:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0713 14:24:40.809056   97846 out.go:177] 👍  Starting "minikube" primary control-plane node in "minikube" cluster
I0713 14:24:40.813283   97846 cache.go:121] Beginning downloading kic base image for docker with docker
I0713 14:24:40.817037   97846 out.go:177] 🚜  Pulling base image v0.0.44 ...
I0713 14:24:40.825094   97846 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I0713 14:24:40.825099   97846 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e in local docker daemon
I0713 14:24:40.825131   97846 preload.go:147] Found local preload: /Users/sagars01/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-arm64.tar.lz4
I0713 14:24:40.825375   97846 cache.go:56] Caching tarball of preloaded images
I0713 14:24:40.826129   97846 preload.go:173] Found /Users/sagars01/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-arm64.tar.lz4 in cache, skipping download
I0713 14:24:40.826162   97846 cache.go:59] Finished verifying existence of preloaded tar for v1.30.0 on docker
I0713 14:24:40.826310   97846 profile.go:143] Saving config to /Users/sagars01/.minikube/profiles/minikube/config.json ...
I0713 14:24:40.886660   97846 image.go:83] Found gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e in local docker daemon, skipping pull
I0713 14:24:40.886672   97846 cache.go:144] gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e exists in daemon, skipping load
I0713 14:24:40.886687   97846 cache.go:194] Successfully downloaded all kic artifacts
I0713 14:24:40.887278   97846 start.go:360] acquireMachinesLock for minikube: {Name:mka11a27ea8452e84bb571791a592a4609c65935 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0713 14:24:40.887379   97846 start.go:364] duration metric: took 78.959µs to acquireMachinesLock for "minikube"
I0713 14:24:40.887402   97846 start.go:96] Skipping create...Using existing machine configuration
I0713 14:24:40.887599   97846 fix.go:54] fixHost starting: 
I0713 14:24:40.892064   97846 out.go:177] 📌  Noticed you have an activated docker-env on docker driver in this terminal:
W0713 14:24:40.895428   97846 out.go:239] ❗  Please re-eval your docker-env, To ensure your environment variables have updated ports:

	'minikube -p minikube docker-env'

	
I0713 14:24:40.895541   97846 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0713 14:24:40.955559   97846 fix.go:112] recreateIfNeeded on minikube: state=Running err=<nil>
W0713 14:24:40.955597   97846 fix.go:138] unexpected machine state, will restart: <nil>
I0713 14:24:40.960072   97846 out.go:177] 🏃  Updating the running docker "minikube" container ...
I0713 14:24:40.964053   97846 machine.go:94] provisionDockerMachine start ...
I0713 14:24:40.964521   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:24:41.023780   97846 main.go:141] libmachine: Using SSH client type: native
I0713 14:24:41.024599   97846 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x104bc7180] 0x104bc99e0 <nil>  [] 0s} 127.0.0.1 59863 <nil> <nil>}
I0713 14:24:41.024606   97846 main.go:141] libmachine: About to run SSH command:
hostname
I0713 14:24:41.196520   97846 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0713 14:24:41.196599   97846 ubuntu.go:169] provisioning hostname "minikube"
I0713 14:24:41.197043   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:24:41.267315   97846 main.go:141] libmachine: Using SSH client type: native
I0713 14:24:41.267518   97846 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x104bc7180] 0x104bc99e0 <nil>  [] 0s} 127.0.0.1 59863 <nil> <nil>}
I0713 14:24:41.267524   97846 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0713 14:24:41.418941   97846 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0713 14:24:41.419100   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:24:41.479937   97846 main.go:141] libmachine: Using SSH client type: native
I0713 14:24:41.480140   97846 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x104bc7180] 0x104bc99e0 <nil>  [] 0s} 127.0.0.1 59863 <nil> <nil>}
I0713 14:24:41.480152   97846 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0713 14:24:41.611759   97846 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0713 14:24:41.611779   97846 ubuntu.go:175] set auth options {CertDir:/Users/sagars01/.minikube CaCertPath:/Users/sagars01/.minikube/certs/ca.pem CaPrivateKeyPath:/Users/sagars01/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/Users/sagars01/.minikube/machines/server.pem ServerKeyPath:/Users/sagars01/.minikube/machines/server-key.pem ClientKeyPath:/Users/sagars01/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/Users/sagars01/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/Users/sagars01/.minikube}
I0713 14:24:41.611810   97846 ubuntu.go:177] setting up certificates
I0713 14:24:41.611821   97846 provision.go:84] configureAuth start
I0713 14:24:41.612019   97846 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0713 14:24:41.670878   97846 provision.go:143] copyHostCerts
I0713 14:24:41.672186   97846 exec_runner.go:144] found /Users/sagars01/.minikube/ca.pem, removing ...
I0713 14:24:41.672582   97846 exec_runner.go:203] rm: /Users/sagars01/.minikube/ca.pem
I0713 14:24:41.672773   97846 exec_runner.go:151] cp: /Users/sagars01/.minikube/certs/ca.pem --> /Users/sagars01/.minikube/ca.pem (1082 bytes)
I0713 14:24:41.673200   97846 exec_runner.go:144] found /Users/sagars01/.minikube/cert.pem, removing ...
I0713 14:24:41.673204   97846 exec_runner.go:203] rm: /Users/sagars01/.minikube/cert.pem
I0713 14:24:41.673460   97846 exec_runner.go:151] cp: /Users/sagars01/.minikube/certs/cert.pem --> /Users/sagars01/.minikube/cert.pem (1127 bytes)
I0713 14:24:41.673763   97846 exec_runner.go:144] found /Users/sagars01/.minikube/key.pem, removing ...
I0713 14:24:41.673767   97846 exec_runner.go:203] rm: /Users/sagars01/.minikube/key.pem
I0713 14:24:41.673859   97846 exec_runner.go:151] cp: /Users/sagars01/.minikube/certs/key.pem --> /Users/sagars01/.minikube/key.pem (1679 bytes)
I0713 14:24:41.674117   97846 provision.go:117] generating server cert: /Users/sagars01/.minikube/machines/server.pem ca-key=/Users/sagars01/.minikube/certs/ca.pem private-key=/Users/sagars01/.minikube/certs/ca-key.pem org=sagars01.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I0713 14:24:41.750537   97846 provision.go:177] copyRemoteCerts
I0713 14:24:41.751080   97846 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0713 14:24:41.751134   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:24:41.813010   97846 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59863 SSHKeyPath:/Users/sagars01/.minikube/machines/minikube/id_rsa Username:docker}
I0713 14:24:41.912719   97846 ssh_runner.go:362] scp /Users/sagars01/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1082 bytes)
I0713 14:24:41.935648   97846 ssh_runner.go:362] scp /Users/sagars01/.minikube/machines/server.pem --> /etc/docker/server.pem (1184 bytes)
I0713 14:24:41.954708   97846 ssh_runner.go:362] scp /Users/sagars01/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0713 14:24:41.974057   97846 provision.go:87] duration metric: took 362.227292ms to configureAuth
I0713 14:24:41.974071   97846 ubuntu.go:193] setting minikube options for container-runtime
I0713 14:24:41.974273   97846 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.30.0
I0713 14:24:41.974379   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:24:42.036069   97846 main.go:141] libmachine: Using SSH client type: native
I0713 14:24:42.036375   97846 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x104bc7180] 0x104bc99e0 <nil>  [] 0s} 127.0.0.1 59863 <nil> <nil>}
I0713 14:24:42.036382   97846 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0713 14:24:42.174285   97846 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0713 14:24:42.174302   97846 ubuntu.go:71] root file system type: overlay
I0713 14:24:42.174466   97846 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I0713 14:24:42.174654   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:24:42.234621   97846 main.go:141] libmachine: Using SSH client type: native
I0713 14:24:42.234837   97846 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x104bc7180] 0x104bc99e0 <nil>  [] 0s} 127.0.0.1 59863 <nil> <nil>}
I0713 14:24:42.234887   97846 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0713 14:24:42.380857   97846 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0713 14:24:42.381016   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:24:42.447127   97846 main.go:141] libmachine: Using SSH client type: native
I0713 14:24:42.447329   97846 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x104bc7180] 0x104bc99e0 <nil>  [] 0s} 127.0.0.1 59863 <nil> <nil>}
I0713 14:24:42.447339   97846 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0713 14:24:42.595076   97846 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0713 14:24:42.595108   97846 machine.go:97] duration metric: took 1.631111959s to provisionDockerMachine
I0713 14:24:42.595127   97846 start.go:293] postStartSetup for "minikube" (driver="docker")
I0713 14:24:42.595167   97846 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0713 14:24:42.595501   97846 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0713 14:24:42.595647   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:24:42.657714   97846 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59863 SSHKeyPath:/Users/sagars01/.minikube/machines/minikube/id_rsa Username:docker}
I0713 14:24:42.751669   97846 ssh_runner.go:195] Run: cat /etc/os-release
I0713 14:24:42.754786   97846 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0713 14:24:42.754807   97846 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0713 14:24:42.754813   97846 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0713 14:24:42.754816   97846 info.go:137] Remote host: Ubuntu 22.04.4 LTS
I0713 14:24:42.754823   97846 filesync.go:126] Scanning /Users/sagars01/.minikube/addons for local assets ...
I0713 14:24:42.754948   97846 filesync.go:126] Scanning /Users/sagars01/.minikube/files for local assets ...
I0713 14:24:42.754990   97846 start.go:296] duration metric: took 159.863834ms for postStartSetup
I0713 14:24:42.755265   97846 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0713 14:24:42.755336   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:24:42.822526   97846 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59863 SSHKeyPath:/Users/sagars01/.minikube/machines/minikube/id_rsa Username:docker}
I0713 14:24:42.917823   97846 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0713 14:24:42.922330   97846 fix.go:56] duration metric: took 2.035004458s for fixHost
I0713 14:24:42.922339   97846 start.go:83] releasing machines lock for "minikube", held for 2.035038125s
I0713 14:24:42.922447   97846 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0713 14:24:42.984360   97846 ssh_runner.go:195] Run: cat /version.json
I0713 14:24:42.984432   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:24:42.984457   97846 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0713 14:24:42.984554   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:24:43.053269   97846 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59863 SSHKeyPath:/Users/sagars01/.minikube/machines/minikube/id_rsa Username:docker}
I0713 14:24:43.053351   97846 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59863 SSHKeyPath:/Users/sagars01/.minikube/machines/minikube/id_rsa Username:docker}
I0713 14:24:43.329839   97846 ssh_runner.go:195] Run: systemctl --version
I0713 14:24:43.334402   97846 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0713 14:24:43.338975   97846 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0713 14:24:43.359093   97846 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0713 14:24:43.359282   97846 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0713 14:24:43.367864   97846 cni.go:259] no active bridge cni configs found in "/etc/cni/net.d" - nothing to disable
I0713 14:24:43.367900   97846 start.go:494] detecting cgroup driver to use...
I0713 14:24:43.367917   97846 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0713 14:24:43.368401   97846 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0713 14:24:43.381952   97846 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0713 14:24:43.392481   97846 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0713 14:24:43.400895   97846 containerd.go:146] configuring containerd to use "cgroupfs" as cgroup driver...
I0713 14:24:43.400986   97846 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0713 14:24:43.408988   97846 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0713 14:24:43.416850   97846 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0713 14:24:43.424721   97846 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0713 14:24:43.432830   97846 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0713 14:24:43.446684   97846 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0713 14:24:43.455174   97846 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I0713 14:24:43.463180   97846 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I0713 14:24:43.470964   97846 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0713 14:24:43.477655   97846 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0713 14:24:43.484866   97846 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0713 14:24:43.621162   97846 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0713 14:24:54.425952   97846 ssh_runner.go:235] Completed: sudo systemctl restart containerd: (10.805155583s)
I0713 14:24:54.426007   97846 start.go:494] detecting cgroup driver to use...
I0713 14:24:54.426047   97846 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0713 14:24:54.426610   97846 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0713 14:24:54.444976   97846 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0713 14:24:54.445184   97846 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0713 14:24:54.468269   97846 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0713 14:24:54.489098   97846 ssh_runner.go:195] Run: which cri-dockerd
I0713 14:24:54.493197   97846 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0713 14:24:54.501593   97846 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0713 14:24:54.519777   97846 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0713 14:24:54.671607   97846 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0713 14:24:54.758010   97846 docker.go:574] configuring docker to use "cgroupfs" as cgroup driver...
I0713 14:24:54.758221   97846 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I0713 14:24:54.812580   97846 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0713 14:24:54.890421   97846 ssh_runner.go:195] Run: sudo systemctl restart docker
I0713 14:24:55.193311   97846 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I0713 14:24:55.207524   97846 ssh_runner.go:195] Run: sudo systemctl stop cri-docker.socket
I0713 14:24:55.222757   97846 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0713 14:24:55.234028   97846 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0713 14:24:55.311740   97846 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0713 14:24:55.390865   97846 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0713 14:24:55.464403   97846 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0713 14:24:55.483238   97846 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0713 14:24:55.492652   97846 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0713 14:24:55.579740   97846 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I0713 14:24:55.678304   97846 start.go:541] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0713 14:24:55.678783   97846 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0713 14:24:55.682687   97846 start.go:562] Will wait 60s for crictl version
I0713 14:24:55.682785   97846 ssh_runner.go:195] Run: which crictl
I0713 14:24:55.685804   97846 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0713 14:24:55.743089   97846 start.go:578] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  26.1.1
RuntimeApiVersion:  v1
I0713 14:24:55.743225   97846 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0713 14:24:55.777304   97846 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0713 14:24:55.806249   97846 out.go:204] 🐳  Preparing Kubernetes v1.30.0 on Docker 26.1.1 ...
I0713 14:24:55.806689   97846 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0713 14:24:55.998931   97846 network.go:96] got host ip for mount in container by digging dns: 192.168.65.254
I0713 14:24:55.999481   97846 ssh_runner.go:195] Run: grep 192.168.65.254	host.minikube.internal$ /etc/hosts
I0713 14:24:56.006192   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0713 14:24:56.105328   97846 kubeadm.go:877] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true metrics-server:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I0713 14:24:56.105471   97846 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I0713 14:24:56.105601   97846 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0713 14:24:56.440409   97846 docker.go:685] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.30.0
registry.k8s.io/kube-controller-manager:v1.30.0
registry.k8s.io/kube-proxy:v1.30.0
registry.k8s.io/kube-scheduler:v1.30.0
registry.k8s.io/metrics-server/metrics-server:<none>
registry.k8s.io/etcd:3.5.12-0
registry.k8s.io/coredns/coredns:v1.11.1
registry.k8s.io/pause:3.9
kubernetesui/dashboard:<none>
kubernetesui/metrics-scraper:<none>
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0713 14:24:56.440433   97846 docker.go:615] Images already preloaded, skipping extraction
I0713 14:24:56.440908   97846 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0713 14:24:56.637910   97846 docker.go:685] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.30.0
registry.k8s.io/kube-proxy:v1.30.0
registry.k8s.io/kube-controller-manager:v1.30.0
registry.k8s.io/kube-scheduler:v1.30.0
registry.k8s.io/metrics-server/metrics-server:<none>
registry.k8s.io/etcd:3.5.12-0
registry.k8s.io/coredns/coredns:v1.11.1
registry.k8s.io/pause:3.9
kubernetesui/dashboard:<none>
kubernetesui/metrics-scraper:<none>
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0713 14:24:56.637945   97846 cache_images.go:84] Images are preloaded, skipping loading
I0713 14:24:56.637954   97846 kubeadm.go:928] updating node { 192.168.49.2 8443 v1.30.0 docker true true} ...
I0713 14:24:56.638221   97846 kubeadm.go:940] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.30.0/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I0713 14:24:56.638376   97846 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0713 14:24:57.254100   97846 cni.go:84] Creating CNI manager for ""
I0713 14:24:57.254131   97846 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0713 14:24:57.254141   97846 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I0713 14:24:57.254195   97846 kubeadm.go:181] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.30.0 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0713 14:24:57.254513   97846 kubeadm.go:187] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.30.0
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0713 14:24:57.254970   97846 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.30.0
I0713 14:24:57.418789   97846 binaries.go:44] Found k8s binaries, skipping transfer
I0713 14:24:57.419064   97846 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0713 14:24:57.463190   97846 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I0713 14:24:57.660915   97846 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0713 14:24:58.070442   97846 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2150 bytes)
I0713 14:24:58.263782   97846 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0713 14:24:58.424254   97846 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0713 14:24:59.818872   97846 ssh_runner.go:235] Completed: sudo systemctl daemon-reload: (1.394635042s)
I0713 14:24:59.819225   97846 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0713 14:25:00.032927   97846 certs.go:68] Setting up /Users/sagars01/.minikube/profiles/minikube for IP: 192.168.49.2
I0713 14:25:00.033177   97846 certs.go:194] generating shared ca certs ...
I0713 14:25:00.033206   97846 certs.go:226] acquiring lock for ca certs: {Name:mk4940b40d56bd7dc4a8c6620ed9106b55bdc07a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0713 14:25:00.034066   97846 certs.go:235] skipping valid "minikubeCA" ca cert: /Users/sagars01/.minikube/ca.key
I0713 14:25:00.034454   97846 certs.go:235] skipping valid "proxyClientCA" ca cert: /Users/sagars01/.minikube/proxy-client-ca.key
I0713 14:25:00.034467   97846 certs.go:256] generating profile certs ...
I0713 14:25:00.035105   97846 certs.go:359] skipping valid signed profile cert regeneration for "minikube-user": /Users/sagars01/.minikube/profiles/minikube/client.key
I0713 14:25:00.035362   97846 certs.go:359] skipping valid signed profile cert regeneration for "minikube": /Users/sagars01/.minikube/profiles/minikube/apiserver.key.7fb57e3c
I0713 14:25:00.035642   97846 certs.go:359] skipping valid signed profile cert regeneration for "aggregator": /Users/sagars01/.minikube/profiles/minikube/proxy-client.key
I0713 14:25:00.036091   97846 certs.go:484] found cert: /Users/sagars01/.minikube/certs/ca-key.pem (1675 bytes)
I0713 14:25:00.036320   97846 certs.go:484] found cert: /Users/sagars01/.minikube/certs/ca.pem (1082 bytes)
I0713 14:25:00.036565   97846 certs.go:484] found cert: /Users/sagars01/.minikube/certs/cert.pem (1127 bytes)
I0713 14:25:00.037097   97846 certs.go:484] found cert: /Users/sagars01/.minikube/certs/key.pem (1679 bytes)
I0713 14:25:00.040058   97846 ssh_runner.go:362] scp /Users/sagars01/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0713 14:25:00.447893   97846 ssh_runner.go:362] scp /Users/sagars01/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0713 14:25:01.055508   97846 ssh_runner.go:362] scp /Users/sagars01/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0713 14:25:01.418758   97846 ssh_runner.go:362] scp /Users/sagars01/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0713 14:25:01.624803   97846 ssh_runner.go:362] scp /Users/sagars01/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I0713 14:25:02.032369   97846 ssh_runner.go:362] scp /Users/sagars01/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0713 14:25:02.238439   97846 ssh_runner.go:362] scp /Users/sagars01/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0713 14:25:02.450385   97846 ssh_runner.go:362] scp /Users/sagars01/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0713 14:25:02.646127   97846 ssh_runner.go:362] scp /Users/sagars01/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0713 14:25:02.846052   97846 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0713 14:25:03.023987   97846 ssh_runner.go:195] Run: openssl version
I0713 14:25:03.053614   97846 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0713 14:25:03.072538   97846 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0713 14:25:03.224038   97846 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Jul  7 15:25 /usr/share/ca-certificates/minikubeCA.pem
I0713 14:25:03.224179   97846 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0713 14:25:03.272524   97846 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0713 14:25:03.418011   97846 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I0713 14:25:03.444107   97846 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-etcd-client.crt -checkend 86400
I0713 14:25:03.451548   97846 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-kubelet-client.crt -checkend 86400
I0713 14:25:03.465731   97846 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/server.crt -checkend 86400
I0713 14:25:03.628223   97846 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/healthcheck-client.crt -checkend 86400
I0713 14:25:03.646006   97846 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/peer.crt -checkend 86400
I0713 14:25:03.659021   97846 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/front-proxy-client.crt -checkend 86400
I0713 14:25:03.823698   97846 kubeadm.go:391] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true metrics-server:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0713 14:25:03.824017   97846 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0713 14:25:04.061073   97846 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
W0713 14:25:04.244954   97846 kubeadm.go:404] apiserver tunnel failed: apiserver port not set
I0713 14:25:04.244967   97846 kubeadm.go:407] found existing configuration files, will attempt cluster restart
I0713 14:25:04.245447   97846 kubeadm.go:587] restartPrimaryControlPlane start ...
I0713 14:25:04.245823   97846 ssh_runner.go:195] Run: sudo test -d /data/minikube
I0713 14:25:04.434720   97846 kubeadm.go:129] /data/minikube skipping compat symlinks: sudo test -d /data/minikube: Process exited with status 1
stdout:

stderr:
I0713 14:25:04.434908   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0713 14:25:04.533191   97846 kubeconfig.go:125] found "minikube" server: "https://127.0.0.1:59867"
I0713 14:25:04.540765   97846 ssh_runner.go:195] Run: sudo diff -u /var/tmp/minikube/kubeadm.yaml /var/tmp/minikube/kubeadm.yaml.new
I0713 14:25:04.636937   97846 kubeadm.go:624] The running cluster does not require reconfiguration: 127.0.0.1
I0713 14:25:04.636980   97846 kubeadm.go:591] duration metric: took 391.54275ms to restartPrimaryControlPlane
I0713 14:25:04.636990   97846 kubeadm.go:393] duration metric: took 813.353083ms to StartCluster
I0713 14:25:04.637011   97846 settings.go:142] acquiring lock: {Name:mkeead4199e98daabc4d40ef4488a50d4c81eb35 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0713 14:25:04.637170   97846 settings.go:150] Updating kubeconfig:  /Users/sagars01/.kube/config
I0713 14:25:04.638287   97846 lock.go:35] WriteFile acquiring /Users/sagars01/.kube/config: {Name:mk217bdca46b930196429bce6630389a847c5852 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0713 14:25:04.639481   97846 start.go:234] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0713 14:25:04.639634   97846 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.30.0
I0713 14:25:04.646703   97846 out.go:177] 🔎  Verifying Kubernetes components...
I0713 14:25:04.639675   97846 addons.go:502] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:true default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:true nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volumesnapshots:false yakd:false]
I0713 14:25:04.646800   97846 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0713 14:25:04.646801   97846 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0713 14:25:04.646930   97846 addons.go:69] Setting dashboard=true in profile "minikube"
I0713 14:25:04.646938   97846 addons.go:69] Setting metrics-server=true in profile "minikube"
I0713 14:25:04.647021   97846 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0713 14:25:04.654856   97846 addons.go:234] Setting addon dashboard=true in "minikube"
I0713 14:25:04.654852   97846 addons.go:234] Setting addon metrics-server=true in "minikube"
W0713 14:25:04.654869   97846 addons.go:243] addon dashboard should already be in state true
W0713 14:25:04.654869   97846 addons.go:243] addon metrics-server should already be in state true
I0713 14:25:04.654899   97846 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0713 14:25:04.647049   97846 addons.go:234] Setting addon storage-provisioner=true in "minikube"
W0713 14:25:04.654924   97846 addons.go:243] addon storage-provisioner should already be in state true
I0713 14:25:04.654953   97846 host.go:66] Checking if "minikube" exists ...
I0713 14:25:04.654961   97846 host.go:66] Checking if "minikube" exists ...
I0713 14:25:04.655010   97846 host.go:66] Checking if "minikube" exists ...
I0713 14:25:04.655707   97846 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0713 14:25:04.655712   97846 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0713 14:25:04.655884   97846 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0713 14:25:04.656164   97846 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0713 14:25:04.772661   97846 out.go:177]     ▪ Using image docker.io/kubernetesui/dashboard:v2.7.0
I0713 14:25:04.776611   97846 out.go:177]     ▪ Using image registry.k8s.io/metrics-server/metrics-server:v0.7.1
I0713 14:25:04.779658   97846 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0713 14:25:04.772044   97846 addons.go:234] Setting addon default-storageclass=true in "minikube"
W0713 14:25:04.783663   97846 addons.go:243] addon default-storageclass should already be in state true
I0713 14:25:04.783713   97846 addons.go:426] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0713 14:25:04.787665   97846 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0713 14:25:04.787669   97846 addons.go:426] installing /etc/kubernetes/addons/metrics-apiservice.yaml
I0713 14:25:04.787674   97846 ssh_runner.go:362] scp metrics-server/metrics-apiservice.yaml --> /etc/kubernetes/addons/metrics-apiservice.yaml (424 bytes)
I0713 14:25:04.791645   97846 out.go:177]     ▪ Using image docker.io/kubernetesui/metrics-scraper:v1.0.8
I0713 14:25:04.787708   97846 host.go:66] Checking if "minikube" exists ...
I0713 14:25:04.787770   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:25:04.787773   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:25:04.795691   97846 addons.go:426] installing /etc/kubernetes/addons/dashboard-ns.yaml
I0713 14:25:04.795696   97846 ssh_runner.go:362] scp dashboard/dashboard-ns.yaml --> /etc/kubernetes/addons/dashboard-ns.yaml (759 bytes)
I0713 14:25:04.795755   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:25:04.796650   97846 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0713 14:25:04.901060   97846 addons.go:426] installing /etc/kubernetes/addons/storageclass.yaml
I0713 14:25:04.901086   97846 ssh_runner.go:362] scp storageclass/storageclass.yaml --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0713 14:25:04.901314   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0713 14:25:04.902835   97846 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59863 SSHKeyPath:/Users/sagars01/.minikube/machines/minikube/id_rsa Username:docker}
I0713 14:25:04.904817   97846 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59863 SSHKeyPath:/Users/sagars01/.minikube/machines/minikube/id_rsa Username:docker}
I0713 14:25:04.906238   97846 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59863 SSHKeyPath:/Users/sagars01/.minikube/machines/minikube/id_rsa Username:docker}
I0713 14:25:04.963069   97846 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59863 SSHKeyPath:/Users/sagars01/.minikube/machines/minikube/id_rsa Username:docker}
I0713 14:25:05.614603   97846 addons.go:426] installing /etc/kubernetes/addons/dashboard-clusterrole.yaml
I0713 14:25:05.614629   97846 ssh_runner.go:362] scp dashboard/dashboard-clusterrole.yaml --> /etc/kubernetes/addons/dashboard-clusterrole.yaml (1001 bytes)
I0713 14:25:05.620511   97846 addons.go:426] installing /etc/kubernetes/addons/metrics-server-deployment.yaml
I0713 14:25:05.620523   97846 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/metrics-server-deployment.yaml (1907 bytes)
I0713 14:25:05.625052   97846 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0713 14:25:05.627858   97846 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0713 14:25:05.661039   97846 addons.go:426] installing /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml
I0713 14:25:05.661055   97846 ssh_runner.go:362] scp dashboard/dashboard-clusterrolebinding.yaml --> /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml (1018 bytes)
I0713 14:25:05.816984   97846 addons.go:426] installing /etc/kubernetes/addons/metrics-server-rbac.yaml
I0713 14:25:05.817005   97846 ssh_runner.go:362] scp metrics-server/metrics-server-rbac.yaml --> /etc/kubernetes/addons/metrics-server-rbac.yaml (2175 bytes)
I0713 14:25:05.856241   97846 ssh_runner.go:235] Completed: sudo systemctl daemon-reload: (1.201366291s)
I0713 14:25:05.856521   97846 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0713 14:25:06.023868   97846 addons.go:426] installing /etc/kubernetes/addons/dashboard-configmap.yaml
I0713 14:25:06.023884   97846 ssh_runner.go:362] scp dashboard/dashboard-configmap.yaml --> /etc/kubernetes/addons/dashboard-configmap.yaml (837 bytes)
I0713 14:25:06.034966   97846 addons.go:426] installing /etc/kubernetes/addons/metrics-server-service.yaml
I0713 14:25:06.034981   97846 ssh_runner.go:362] scp metrics-server/metrics-server-service.yaml --> /etc/kubernetes/addons/metrics-server-service.yaml (446 bytes)
I0713 14:25:06.213780   97846 addons.go:426] installing /etc/kubernetes/addons/dashboard-dp.yaml
I0713 14:25:06.213793   97846 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/dashboard-dp.yaml (4288 bytes)
I0713 14:25:06.232828   97846 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/metrics-apiservice.yaml -f /etc/kubernetes/addons/metrics-server-deployment.yaml -f /etc/kubernetes/addons/metrics-server-rbac.yaml -f /etc/kubernetes/addons/metrics-server-service.yaml
I0713 14:25:06.245510   97846 addons.go:426] installing /etc/kubernetes/addons/dashboard-role.yaml
I0713 14:25:06.245525   97846 ssh_runner.go:362] scp dashboard/dashboard-role.yaml --> /etc/kubernetes/addons/dashboard-role.yaml (1724 bytes)
I0713 14:25:06.275692   97846 addons.go:426] installing /etc/kubernetes/addons/dashboard-rolebinding.yaml
I0713 14:25:06.275710   97846 ssh_runner.go:362] scp dashboard/dashboard-rolebinding.yaml --> /etc/kubernetes/addons/dashboard-rolebinding.yaml (1046 bytes)
I0713 14:25:06.437414   97846 addons.go:426] installing /etc/kubernetes/addons/dashboard-sa.yaml
I0713 14:25:06.437432   97846 ssh_runner.go:362] scp dashboard/dashboard-sa.yaml --> /etc/kubernetes/addons/dashboard-sa.yaml (837 bytes)
I0713 14:25:06.457052   97846 addons.go:426] installing /etc/kubernetes/addons/dashboard-secret.yaml
I0713 14:25:06.457065   97846 ssh_runner.go:362] scp dashboard/dashboard-secret.yaml --> /etc/kubernetes/addons/dashboard-secret.yaml (1389 bytes)
I0713 14:25:06.473564   97846 addons.go:426] installing /etc/kubernetes/addons/dashboard-svc.yaml
I0713 14:25:06.473577   97846 ssh_runner.go:362] scp dashboard/dashboard-svc.yaml --> /etc/kubernetes/addons/dashboard-svc.yaml (1294 bytes)
I0713 14:25:06.490242   97846 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/dashboard-ns.yaml -f /etc/kubernetes/addons/dashboard-clusterrole.yaml -f /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml -f /etc/kubernetes/addons/dashboard-configmap.yaml -f /etc/kubernetes/addons/dashboard-dp.yaml -f /etc/kubernetes/addons/dashboard-role.yaml -f /etc/kubernetes/addons/dashboard-rolebinding.yaml -f /etc/kubernetes/addons/dashboard-sa.yaml -f /etc/kubernetes/addons/dashboard-secret.yaml -f /etc/kubernetes/addons/dashboard-svc.yaml
I0713 14:25:10.255552   97846 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml: (4.627848625s)
I0713 14:25:10.255537   97846 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml: (4.630559792s)
I0713 14:25:10.255596   97846 ssh_runner.go:235] Completed: sudo systemctl start kubelet: (4.399224375s)
I0713 14:25:10.255694   97846 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/metrics-apiservice.yaml -f /etc/kubernetes/addons/metrics-server-deployment.yaml -f /etc/kubernetes/addons/metrics-server-rbac.yaml -f /etc/kubernetes/addons/metrics-server-service.yaml: (4.023007375s)
I0713 14:25:10.255856   97846 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0713 14:25:10.256176   97846 addons.go:470] Verifying addon metrics-server=true in "minikube"
I0713 14:25:10.338469   97846 api_server.go:52] waiting for apiserver process to appear ...
I0713 14:25:10.338618   97846 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0713 14:25:10.949071   97846 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/dashboard-ns.yaml -f /etc/kubernetes/addons/dashboard-clusterrole.yaml -f /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml -f /etc/kubernetes/addons/dashboard-configmap.yaml -f /etc/kubernetes/addons/dashboard-dp.yaml -f /etc/kubernetes/addons/dashboard-role.yaml -f /etc/kubernetes/addons/dashboard-rolebinding.yaml -f /etc/kubernetes/addons/dashboard-sa.yaml -f /etc/kubernetes/addons/dashboard-secret.yaml -f /etc/kubernetes/addons/dashboard-svc.yaml: (4.458957375s)
I0713 14:25:10.949073   97846 api_server.go:72] duration metric: took 6.309832666s to wait for apiserver process to appear ...
I0713 14:25:10.949092   97846 api_server.go:88] waiting for apiserver healthz status ...
I0713 14:25:10.953124   97846 out.go:177] 💡  Some dashboard features require the metrics-server addon. To enable all features please run:

	minikube addons enable metrics-server

I0713 14:25:10.949918   97846 api_server.go:253] Checking apiserver healthz at https://127.0.0.1:59867/healthz ...
I0713 14:25:10.958772   97846 api_server.go:279] https://127.0.0.1:59867/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[+]poststarthook/rbac/bootstrap-roles ok
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[-]poststarthook/apiservice-discovery-controller failed: reason withheld
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
W0713 14:25:10.959106   97846 api_server.go:103] status: https://127.0.0.1:59867/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[+]poststarthook/rbac/bootstrap-roles ok
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[-]poststarthook/apiservice-discovery-controller failed: reason withheld
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
I0713 14:25:10.963107   97846 out.go:177] 🌟  Enabled addons: storage-provisioner, metrics-server, default-storageclass, dashboard
I0713 14:25:10.970149   97846 addons.go:505] duration metric: took 6.330908625s for enable addons: enabled=[storage-provisioner metrics-server default-storageclass dashboard]
I0713 14:25:11.450266   97846 api_server.go:253] Checking apiserver healthz at https://127.0.0.1:59867/healthz ...
I0713 14:25:11.456471   97846 api_server.go:279] https://127.0.0.1:59867/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[+]poststarthook/rbac/bootstrap-roles ok
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[-]poststarthook/apiservice-discovery-controller failed: reason withheld
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
W0713 14:25:11.456484   97846 api_server.go:103] status: https://127.0.0.1:59867/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[+]poststarthook/rbac/bootstrap-roles ok
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[-]poststarthook/apiservice-discovery-controller failed: reason withheld
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
I0713 14:25:11.950243   97846 api_server.go:253] Checking apiserver healthz at https://127.0.0.1:59867/healthz ...
I0713 14:25:11.966706   97846 api_server.go:279] https://127.0.0.1:59867/healthz returned 200:
ok
I0713 14:25:11.969348   97846 api_server.go:141] control plane version: v1.30.0
I0713 14:25:11.969365   97846 api_server.go:131] duration metric: took 1.020308334s to wait for apiserver health ...
I0713 14:25:11.969379   97846 system_pods.go:43] waiting for kube-system pods to appear ...
I0713 14:25:11.985602   97846 system_pods.go:59] 8 kube-system pods found
I0713 14:25:11.985633   97846 system_pods.go:61] "coredns-7db6d8ff4d-s4mcr" [05961a2f-73eb-4428-acd1-3ef3b58813e1] Running
I0713 14:25:11.985643   97846 system_pods.go:61] "etcd-minikube" [adbb69fe-953a-4dd5-8d0d-f466072253c4] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0713 14:25:11.985658   97846 system_pods.go:61] "kube-apiserver-minikube" [c673d3ce-6c6f-42e4-b244-64f6e67e1fb9] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0713 14:25:11.985672   97846 system_pods.go:61] "kube-controller-manager-minikube" [505e229d-8924-4642-9c6a-95920e852569] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0713 14:25:11.985681   97846 system_pods.go:61] "kube-proxy-ptllz" [cf51e6ae-781f-4b73-bade-fc653db147cb] Running
I0713 14:25:11.985687   97846 system_pods.go:61] "kube-scheduler-minikube" [5007e456-24c3-4a65-981b-4d0bc5cc9e75] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0713 14:25:11.985690   97846 system_pods.go:61] "metrics-server-c59844bb4-7s6jk" [487c8197-ea93-44a2-9e87-a0714191f861] Running
I0713 14:25:11.985694   97846 system_pods.go:61] "storage-provisioner" [d9551c31-49f8-4790-a253-028c30c36bf8] Running
I0713 14:25:11.985701   97846 system_pods.go:74] duration metric: took 16.315792ms to wait for pod list to return data ...
I0713 14:25:11.985713   97846 kubeadm.go:576] duration metric: took 7.3465145s to wait for: map[apiserver:true system_pods:true]
I0713 14:25:11.985727   97846 node_conditions.go:102] verifying NodePressure condition ...
I0713 14:25:11.992107   97846 node_conditions.go:122] node storage ephemeral capacity is 61202244Ki
I0713 14:25:11.992127   97846 node_conditions.go:123] node cpu capacity is 8
I0713 14:25:11.992144   97846 node_conditions.go:105] duration metric: took 6.413166ms to run NodePressure ...
I0713 14:25:11.992160   97846 start.go:240] waiting for startup goroutines ...
I0713 14:25:11.992169   97846 start.go:245] waiting for cluster config update ...
I0713 14:25:11.992196   97846 start.go:254] writing updated cluster config ...
I0713 14:25:11.993064   97846 ssh_runner.go:195] Run: rm -f paused
I0713 14:25:12.235109   97846 start.go:600] kubectl: 1.30.2, cluster: 1.30.0 (minor skew: 0)
I0713 14:25:12.247362   97846 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


